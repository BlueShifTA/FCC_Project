#!/bin/bash

#
# ---------------------------------------------------------
# Comments & optional setting
# ---------------------------------------------------------
# INPUT1 = Delta 
# INPUT2 = MD - New Planck's scale
# INPUT3 = Amount
 

#
# ---------------------------------------------------------
# LSF parameters
# ---------------------------------------------------------
#
echo ""
echo "Job is running on `uname -a`"
echo "Job started on `date`"
echo ""
#echo "Job has been submitted from : " $LS_SUBCWD


. /afs/cern.ch/sw/lcg/external/gcc/4.8/x86_64-slc6/setup.sh
. /afs/cern.ch/sw/lcg/app/releases/ROOT/5.34.32/x86_64-slc6-gcc48-opt/root/bin/thisroot.sh

#
#----------------------------------------------------------
# S e t   t h e   r u n t i m e   e n v i r o n m e n t
#----------------------------------------------------------
#
echo "Step 1 : Setting the environment"
SCRATCH_SRC="/afs/cern.ch/work/s/sekin/private/Project/SnowMass_33TeV/Signal/LSF"
CODE_SRC=${SCRATCH_SRC}/CODE
WORKDIR_ME=${SCRATCH_SRC}/GenSig
WORKDIR=${WORKDIR_ME}
echo "- - - - - PATH SETTING- - - - -"
echo "SCRAM_ARCH is : " ${SCRAM_ARCH}
echo "CODE_SRC is : " ${CODE_SRC}
echo "WorkDir    is : " ${WORKDIR}
echo "Disk space on this batch machine:"
df -h


#
#----------------------------------------------------------
# Run INPUT
#----------------------------------------------------------
#
echo "Step 2 : Run"
##########################################################################################
# Step-1: Setting Variables                                                              #
##########################################################################################

echo "Start Step-1: "

cd ${WORKDIR}
SCRAM_ARCH=slc6_amd64_gcc472


mkdir INPUT1_INPUT2_INPUT3
cd INPUT1_INPUT2_INPUT3

cp -a ${CODE_SRC}/ADD_pythia.cc .
cp -a ${CODE_SRC}/Make* .

sed s/IN1/INPUT1/g ADD_pythia.cc > temp
mv temp ADD_pythia.cc

sed s/IN2/INPUT2/g ADD_pythia.cc > temp
mv temp ADD_pythia.cc

sed s/IN3/INPUT3/g ADD_pythia.cc > temp
mv temp ADD_pythia.cc


###############################################################################################################


##########################################################################################
# Step-2: Running Pythia                                                                 #
##########################################################################################

echo "Start Step-2: "

make ADD_pythia
./ADD_pythia > pythia_INPUT1_INPUT2_INPUT3.log



##########################################################################################
# Step-3: Running DELPHES                                                                #
##########################################################################################

echo "Start Step-3: "

##---------------Prepare running code---------------------------

echo "Loading......."

cp ${CODE_SRC}/delphes_card_CMS_HE_LHC_PileUp.tcl .
cp ${CODE_SRC}/DelphesHepMC .
cp ${CODE_SRC}/libDelphes.so .
cp ${CODE_SRC}/MinBias100K_33TeV.pileup .

echo "Finish........"
#----------Running Delphes--------

echo "Running Delphes"

./DelphesHepMC delphes_card_CMS_HE_LHC_PileUp.tcl delphes_output.root ADD_pythia.hep  

rm -f ADD_pythia.hep

#---------------------------------------------Analysis Part---------------------------------

cp -a ${CODE_SRC}/analysis_code_w.C .

root -l  analysis_code_w.C\(\"delphes_output.root\"\)

rm -f delphes_output.root

mv Monojet.root ADD_INPUT1_INPUT2_INPUT3.root
mv Monojet.txt ADD_INPUT1_INPUT2_INPUT3.txt

rm -f libDelphes.so 
rm -f Make* 
rm -f ADD_pythia
rm -f DelphesHepMC 
rm -f MinBias100K_33TeV.pileup 

#----------------------------------------------------------
# Clear job and log
#----------------------------------------------------------
#-----------------------------Move File--------------------------------

cd ${WORKDIR}

mv INPUT1_INPUT2_INPUT3 ${WORKDIR_ME} 

rm -rf Log_*
rm -rf LSF*

echo ""
echo "Job end `date`"
echo ""

exit ${status}
#==============================End Of Program======================================
